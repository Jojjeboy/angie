{"ast":null,"code":"import { EventEmitter, ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"messageInput\"];\nexport let FormComponent = /*#__PURE__*/(() => {\n  class FormComponent {\n    constructor() {\n      this.messageEvent = new EventEmitter();\n    }\n\n    ngAfterViewInit() {\n      this.messageInputElementRef.nativeElement.focus();\n    }\n\n    onKeydown(event) {\n      if (event.key === 'Enter') {\n        if (this.message.length) {\n          this.messageEvent.emit(this.message);\n          this.resetMessageField();\n        }\n      }\n    }\n\n    resetMessageField() {\n      this.message = '';\n    }\n\n    ngOnInit() {\n      this.resetMessageField();\n\n      if (this.placeholder === null) {\n        this.placeholder = 'Default placeolder';\n      }\n    }\n\n  }\n\n  FormComponent.ɵfac = function FormComponent_Factory(t) {\n    return new (t || FormComponent)();\n  };\n\n  FormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormComponent,\n    selectors: [[\"app-form\"]],\n    viewQuery: function FormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageInputElementRef = _t.first);\n      }\n    },\n    inputs: {\n      placeholder: \"placeholder\"\n    },\n    outputs: {\n      messageEvent: \"messageEvent\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"form-row\"], [1, \"col-12\"], [\"id\", \"message\", \"type\", \"text\", 1, \"form-control\", \"form-control-lg\", 3, \"value\", \"placeholder\", \"keydown\", \"input\"], [\"messageInput\", \"\"]],\n    template: function FormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2, 3);\n        i0.ɵɵlistener(\"keydown\", function FormComponent_Template_input_keydown_2_listener($event) {\n          return ctx.onKeydown($event);\n        })(\"input\", function FormComponent_Template_input_input_2_listener($event) {\n          return ctx.message = $event.target.value;\n        });\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.placeholder);\n        i0.ɵɵproperty(\"value\", ctx.message);\n      }\n    },\n    styles: [\"input#message[_ngcontent-%COMP%]:focus{outline:none;box-shadow:none}\"]\n  });\n  return FormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}