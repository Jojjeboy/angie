{"ast":null,"code":"import * as Highcharts from 'highcharts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"highcharts-angular\";\nexport let GraphComponent = /*#__PURE__*/(() => {\n  class GraphComponent {\n    constructor() {\n      //  @Input() xaxis: [];\n      //  @Input() yaxis: [];\n      this.Highcharts = Highcharts; // Highcharts, it's Highcharts\n\n      this.optFromInputString = `\n  {\n    \"title\": { \"text\": \"Highcharts chart\" },\n    \"series\": [{\n      \"data\": [11,1,3],\n      \"zones\": [{\n        \"value\": 7.2,\n        \"dashStyle\": \"dot\",\n        \"color\": \"red\"\n      }]\n    }, {\n      \"data\": [9,6,7]\n    }]\n  }\n  `;\n      this.optFromInput = JSON.parse(this.optFromInputString);\n      this.updateFromInput = false;\n      this.seriesTypes = {\n        line: 'column',\n        column: 'scatter',\n        scatter: 'spline',\n        spline: 'line'\n      };\n    } // Demonstrate chart instance\n\n\n    logChartInstance(chart) {\n      console.log('Chart instance: ', chart);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  GraphComponent.ɵfac = function GraphComponent_Factory(t) {\n    return new (t || GraphComponent)();\n  };\n\n  GraphComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GraphComponent,\n    selectors: [[\"app-graph\"]],\n    decls: 5,\n    vars: 4,\n    consts: [[3, \"Highcharts\", \"options\", \"update\", \"oneToOne\", \"updateChange\", \"chartInstance\"]],\n    template: function GraphComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Demo #1: Highcharts with a basic editor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"article\");\n        i0.ɵɵelement(3, \"section\");\n        i0.ɵɵelementStart(4, \"highcharts-chart\", 0);\n        i0.ɵɵlistener(\"updateChange\", function GraphComponent_Template_highcharts_chart_updateChange_4_listener($event) {\n          return ctx.updateFromInput = $event;\n        })(\"chartInstance\", function GraphComponent_Template_highcharts_chart_chartInstance_4_listener($event) {\n          return ctx.logChartInstance($event);\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"Highcharts\", ctx.Highcharts)(\"options\", ctx.optFromInput)(\"update\", ctx.updateFromInput)(\"oneToOne\", true);\n      }\n    },\n    dependencies: [i1.HighchartsChartComponent]\n  });\n  return GraphComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}